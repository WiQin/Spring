<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!--注入切面类-->
	<bean name="logger" class="com.aop.aspect.MyLogger">
	</bean>

	<!--注入通知-->
	<bean name="afterAdvice" class="com.aop.after.AfterAdvice">
		<property name="logger" ref="logger"></property>
	</bean>

	<!-- 配置advisor 增强器-->
	<!-- 作用:筛选要拦截(要代理)的方法 -->
	<bean name="advisor"
				 class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
	<!-- 注入advice 表示增强器要在哪一个advice起作用-->
	<property name="advice" ref="afterAdvice"></property>
	<!-- 注入需要被拦截的目标对象中的方法(连接点),默认所有非final -->
	<property name="patterns">
		<list>
			<value>.*bankAction</value>
		</list>
	</property>
	</bean>

	<!--增强器，通过方法名匹配-->
	<bean name="advisor2"
		  class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<!-- 注入advice 表示增强器要在哪一个advice起作用-->
		<property name="advice" ref="afterAdvice"></property>
		<!-- 注入需要被拦截的目标对象中的方法(连接点),默认所有非final -->
		<property name="mappedNames">
			<list>
				<value>bankAction</value>
			</list>
		</property>
	</bean>


	<!--账户-->
	<bean name="account" class="com.aop.pojo.Account">
		<property name="id" value="1"></property>
		<property name="name" value="1"></property>
		<property name="balance" value="1"></property>
	</bean>


	<!--dao层对象-->
	<bean name="accountDao" class="com.aop.dao.AccountDaoImpl">

	</bean>

	<!--配置目标对象【service的实现类对象】-->
	<bean name="target" class="com.aop.service.AccountServiceImpl">
		<!--注入账户-->
		<property name="account" ref="account"></property>
		<!--注入dao层对象-->
		<property name="accountDao" ref="accountDao"></property>
	</bean>


	<!--通过spring的工厂类获取代理对象-->
	<bean name="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<!--注入目标对象-->
		<property name="target" ref="target"></property>
		<!--注入目标对象实现的接口-->
		<property name="proxyInterfaces">
			<list>
				<value>com.aop.service.IAccountService</value>
			</list>
		</property>
		<!--注入通知，拦截器/增强器-->
		<property name="interceptorNames">
			<list>
				<!--<value>afterAdvice</value>-->
				<value>advisor</value>
			</list>
		</property>
	</bean>


    
</beans>