<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">


	<!-- 配置dao层对象 -->
	<bean id="dao"
		  class="com.aop.dao.AccountDaoImpl"/>
	<!-- 配置目标对象 -->
	<bean name="target"
		  class="com.aop.service.AccountServiceImpl">
		<property name="accountDao" ref="dao"></property>
	</bean>
	<!-- 配置切面类 -->
	<bean name="handLer" class="com.aop.xml.XmlHandler"></bean>

	<!-- 配置aop的代理 -->
	<aop:config>
		<!-- 定义切入点名为myPointCut -->
		<aop:pointcut expression="execution(public * com.aop.service.*.*(..))" id="myPointCut"/>

		<!-- 定义切面类 以及需要使用的advice -->
		<aop:aspect id="aspect" ref="handLer">
			<!-- 表示beforeAdvice会把切面类handler中的beforeTest方法织入到名字叫myPointCut的切入点上面 -->
			<aop:before method="beforeTest" pointcut-ref="myPointCut"/>

			<!-- after表示不管方法是否正常结束都会起作用 -->
			<aop:after method="afterTest" pointcut-ref="myPointCut"/>

			<!-- after-returning表示方法正常结束才会起作用(抛异常时候不起作用) -->
			<aop:after-returning method="afterReturningTest" pointcut-ref="myPointCut"/>

			<aop:around method="aroundTest" pointcut-ref="myPointCut"/>

			<!-- throwing="ex"表示throwingTest方法中接收异常对象的名字一定要是ex -->
			<aop:after-throwing method="throwingTest" pointcut-ref="myPointCut" throwing="ex"/>
		</aop:aspect>

	</aop:config>

</beans>